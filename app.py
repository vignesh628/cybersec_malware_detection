import streamlit as st
import pandas as pd
import numpy as np
import tensorflow as tf
tf.config.run_functions_eagerly(True)
from tensorflow import keras

# Load the saved model
model = tf.keras.models.load_model("./model.h5")

# Define the prediction function
def predict(model, input):
    model.compile(optimizer = keras.optimizers.RMSprop(0.001),
              loss='binary_crossentropy')
    prediction = model.predict(input)
    output = ''
    for i in prediction:
        if i>0.5:
            output += 'S '
        else:
            output += 'E '
    return output

# Define the Streamlit app
def app():
    st.title('Android Malware Detection')

    # Add input widget for the user to upload a CSV file
    uploaded_file = st.file_uploader("Choose a CSV file", type="csv")

    if uploaded_file is not None:
        # Read the CSV file as a Pandas dataframe
        data = pd.read_csv(uploaded_file)
        data = data.drop(data.columns[-1], axis=1)
        data['class'] = 0
        data = data.replace('[?,B,S]', np.NaN, regex=True)
        data.dropna(inplace=True)
        for c in data.columns:
            data[c] = pd.to_numeric(data[c])
        # Preprocess the input data
        # Extract features (all columns except the last one) and convert to numpy array
        features = data[data.columns[:len(data.columns)-1]].to_numpy()
        print(features)
        # Replace missing values with 0
        features = np.nan_to_num(features)
        # Make a prediction using the model
        print(features)
        try:
            features = features.reshape(data.shape[0],215)
            prediction = predict(model, features)
            # Show the prediction to the user
            st.write('Prediction:', prediction)
        except:
            print('invalid data passed...')
            st.write(' Invalid data passed')
        

if __name__ == '__main__':
    app()
