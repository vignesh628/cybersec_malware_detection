import streamlit as st
import pandas as pd
import numpy as np
import tensorflow as tf
tf.config.run_functions_eagerly(True)
from tensorflow import keras

# Load the saved model
model = tf.keras.models.load_model(r"C:\Users\vigne\Downloads\Assignment_CyberSecurity\model.h5")

# Define the prediction function
def predict(model, input):
    model.compile(optimizer = keras.optimizers.RMSprop(0.001),
              loss='binary_crossentropy')
    prediction = model.predict(input)
    if prediction>0.5:
        prediction = 'S'
    else:
        prediction = 'E'
    return prediction

# Define the Streamlit app
def app():
    st.title('Android Malware Detection')

    # Add input widget for the user to upload a CSV file
    uploaded_file = st.file_uploader("Choose a CSV file", type="csv")

    if uploaded_file is not None:
        # Read the CSV file as a Pandas dataframe
        data = pd.read_csv(uploaded_file)
        # Preprocess the input data
        # Extract features (all columns except the last one) and convert to numpy array
        features = data[data.columns[:len(data.columns)-1]].to_numpy()
        # Convert features to float type
        features = features.astype(float)
        # Replace missing values with 0
        features = np.nan_to_num(features)
        # Make a prediction using the model
        try:
            features = features.reshape(data.shape[0],215)
        except:
            print('invalid data passed...')
        prediction = predict(model, features)

        # Show the prediction to the user
        st.write('Prediction:', prediction)

if __name__ == '__main__':
    app()
